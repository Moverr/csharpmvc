@model partyInvites.Models.GuestResponse

@{
    ViewBag.Title = " Profile Form ";
    ViewBag.letMeKnow = "Did You say Let Me Know ";
}






<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <h2>@ViewBag.Message</h2>

            @using (Html.BeginForm("RsvForm", "Home", FormMethod.Post, new { role = "form", id = "mose", }))

            {
                @Html.ValidationSummary()

                <!-- , new { style = "color:red" } -->
                <!-- Model Binding the ohter important step in this whole game -->

                <div class="form-group">
                    @Html.LabelFor(model => model.Name)
                    <!-- Using items that end with FOr  instead of just   top if dealing with binding -->
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", id = "exampleInputName", type = "text" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Email)
                    <!-- Using items that end with FOr  instead of just   top if dealing with binding -->
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", id = "exampleInputEmail", type = "email" })
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.Phone)
                    <!-- Using items that end with FOr  instead of just   top if dealing with binding -->
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", id = "exampleInputPhone", type = "number" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.willAtted)
                    <!-- Using items that end with FOr  instead of just   top if dealing with binding -->
                    @Html.DropDownListFor(model => model.willAtted, new[] {
                   new SelectListItem(){Text = "Yes, I'll be there ",Value=bool.TrueString},
                     new SelectListItem(){Text = "No, I won't be there ",Value=bool.FalseString},

               }, new { @class = "form-control" })


                </div>

                <button type="submit" class="btn btn-primary">
                    Submit
                </button>
            }
        </div>
    </div>
</div>







